// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @db.VarChar(255)
  firstName      String           @map("first_name") @db.VarChar(255)
  lastName       String           @map("last_name") @db.VarChar(255)
  email          String           @db.VarChar(255)
  company        String?          @db.VarChar(255)
  password       String           @db.VarChar(255)
  isActive       Boolean?         @map("is_active")
  role           Role
  imgPath        String?          @map("img_path") @db.Text
  refreshToken   String?          @map("refresh_token") @db.VarChar(255)
  forgotToken    String?          @map("forgot_token") @db.VarChar(255)
  UserPermission UserPermission[]
  Accounts       Account[]
  Api            Api[]
  Reviews        Reviews[]

  @@index([id], name: "ix_users_id")
  @@map("users")
}

enum Role {
  demo
  client
  admin
  service
}

model Permission {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  description String?
  users       UserPermission[]
}

model UserPermission {
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int
  grantedAt    DateTime   @default(now())

  @@id([userId, permissionId])
}

enum Broker {
  tradestation
  alpaca
  kraken
  coinbase
  interactive_brokers
  oanda
}

enum AccountType {
  service_account
  live_account
  paper_account
}

model Account {
  id             Int         @id @default(autoincrement())
  userId         Int
  accountNum     String
  nickname       String?     @db.VarChar(255)
  broker         Broker
  dateOpened     DateTime?   @db.Date
  initialBalance Decimal?    @default(0.00) @db.Decimal(15, 2)
  currentBalance Decimal?    @default(0.00) @db.Decimal(15, 2)
  accountType    AccountType
  autoTrade      Boolean     @default(false)
  user           User        @relation(fields: [userId], references: [id])

  @@index([id])
}

enum ApiStatusType {
  active
  disabled
}

model Api {
  id           Int           @id @default(autoincrement())
  userId       Int
  platform     Broker
  serviceLevel AccountType
  apiKey       String?       @db.Text
  secret       String?       @db.Text
  accessToken  String?       @db.Text
  refreshToken String?       @db.Text
  expiration   DateTime?
  state        String?       @db.Text
  scope        String?       @db.Text
  status       ApiStatusType @default(active)
  nickname     String?
  user         User          @relation(fields: [userId], references: [id])

  @@index([id])
}

model Tickers {
  id         Int          @id @default(autoincrement())
  symbol     String       @unique @db.VarChar(255)
  name       String       @db.VarChar(255)
  alt_names  Json?
  industry   String?      @db.VarChar(255)
  market     String       @db.VarChar(255)
  market_cap String?      @db.VarChar(255)
  historical Historical[]

  @@index([id])
  @@index([symbol])
}

model Historical {
  id           Int      @id @default(autoincrement())
  custom_id    String   @unique @db.VarChar(255)
  symbol       String   @db.VarChar(255)
  milliseconds BigInt?  @default(0)
  duration     String?  @db.VarChar(20)
  open         Decimal  @db.Decimal(30, 15)
  low          Decimal  @db.Decimal(30, 15)
  high         Decimal  @db.Decimal(30, 15)
  close        Decimal  @db.Decimal(30, 15)
  adj_close    Decimal? @db.Decimal(30, 15)
  volume       Decimal  @default(0) @db.Decimal(20, 2)
  vwap         Decimal  @default(0) @db.Decimal(30, 15)
  timestamp    DateTime
  transactions Int      @default(0)
  source       String   @db.VarChar(30)
  market       String   @db.VarChar(30)
  ticker       Tickers  @relation(fields: [symbol], references: [symbol])

  @@index([id])
  @@index([timestamp])
  @@index([custom_id])
}

model Holidays {
  id       Int      @id @default(autoincrement())
  date     DateTime @db.Date
  exchange String?  @db.VarChar(200)
  name     String?  @db.VarChar(200)
  status   String?  @db.VarChar(200)

  @@index([id])
  @@index([date])
}

model Exchanges {
  id          Int     @id @default(autoincrement())
  acronym     String? @db.VarChar(200)
  asset_class String? @db.VarChar(200)
  name        String? @db.VarChar(200)
  type        String? @db.VarChar(200)
  url         String? @db.Text

  @@index([id])
}

model Reviews {
  id          Int      @id @default(autoincrement())
  firstName   String   @db.VarChar(255)
  lastName    String   @db.VarChar(255)
  message     String   @db.Text
  rating      Int
  userId      Int
  dateCreated DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])

  @@index([id])
}

